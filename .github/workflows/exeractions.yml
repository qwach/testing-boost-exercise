name: CMake

on:
  push:
    branches: [ main, extend-tests ]
  pull_request:
    branches: [ main, extend-tests ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  style:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Check code format
      run: clang-format --Werror --dry-run src/* tests/*
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Install build dependencies
      run: sudo apt install libeigen3-dev libyaml-cpp-dev
    
    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Create build archive
      run: tar -cvf ${{github.workspace}}/build.tar ${{github.workspace}}/build
      
    - name: Upload build archive
      uses: actions/upload-artifact@v2.3.1
      with:
        name: build-archive
        path: ${{github.workspace}}/build.tar
        if-no-files-found: error
        retention-days: 1
    
  test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v2
    
    - name: Install Boost testing framework
      run: sudo apt install libboost-test-dev
    
    - name: Download build archive
      uses: actions/download-artifact@v2.1.0
      with:
        name: build-archive
        
    - name: Unpack build archive
      run: tar -xvf ${{github.workspace}}/build.tar
    
    - name: Run tests
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.  
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}
